{"version":3,"sources":["components/Header.js","components/SearchBox.js","components/Scroll.js","components/Card.js","components/CardList.js","components/ErrorBoundry.js","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Header","nextProps","nextState","className","this","props","title","React","Component","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","Card","id","name","email","alt","src","CardList","robots","map","user","i","ErrorBoundry","state","hasError","error","info","setState","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","CHANGE_SEARCH_FIELD","connect","requestRobots","isPending","searchField","searchRobots","dispatch","onRequestRobots","fetch","then","response","json","data","payload","catch","onSearchChange","event","text","target","value","useEffect","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateRobots","initialStateSearch","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fdb750f.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return false;\n  }\n\n  render() {\n    return <h1 className='f1'>{this.props.title}</h1>\n  }\n}\n\nexport default Header;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots' \n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\n      {props.children}\n    </div>\n  )\n};\n\nexport default Scroll;","import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robots img' src={`https://robohash.org/${id}?200x200`}/>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card \n              key={robots[i].id} \n              id={robots[i].id} \n              name={robots[i].name} \n              email={robots[i].email} \n            />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default CardList;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oops sorry something went wrong</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","export const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport CardList from '../components/CardList';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nimport { requestRobots, setSearchField } from '../actions';\n\nfunction App(props) {\n  const { onRequestRobots, robots, isPending, searchField, onSearchChange } = props;\n\n  useEffect(() => {\n    onRequestRobots();\n  }, [onRequestRobots])\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  })\n  return (\n    <div className='tc'>\n      <Header title={'Robofriends'} />\n      <SearchBox searchChange={onSearchChange} />\n      {isPending\n        ? <h1>Loading</h1>\n        : <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error,\n    searchField: state.searchRobots.searchField\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRequestRobots: () => dispatch(requestRobots()),\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { \n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n  CHANGE_SEARCH_FIELD \n} from './constants';\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING })\n  fetch('https://jsonplaceholder.cypress.io/users')\n    .then(response => response.json())\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n  CHANGE_SEARCH_FIELD \n} from './constants';\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n}\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch(action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, { robots: action.payload, isPending: false })\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, { error: action.payload , isPending: false })\n    default:\n      return state\n  }\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  switch(action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {searchField:action.payload});\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ requestRobots, searchRobots })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}